{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/checkout/checkout.component.css","webpack:///./app/checkout/checkout.component.html","webpack:///./app/checkout/checkout.component.ts","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./app/shop/shop.component.html","webpack:///./app/shop/shop.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AAET;AACY;AACd;AACA;AACY;AACT;AAEG;AAEJ;AACF;AAG7C,IAAI,MAAM,GAAG;IACT,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yDAAI,EAAE;IAC7B,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,qEAAQ,EAAE;IACzC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4DAAK,EAAE;CACtC;AAyBD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvBrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,uEAAW;gBACX,yDAAI;gBACJ,yDAAI;gBACJ,qEAAQ;gBACR,4DAAK;aACR;YACD,OAAO,EAAE;gBACN,uEAAa;gBACb,qEAAgB;gBAChB,2DAAW;gBACV,6DAAY,CAAC,OAAO,CAAC,MAAM,EAAE;oBACzB,OAAO,EAAE,IAAI;oBACb,aAAa,EAAE,KAAK,CAAC,6BAA6B;iBACrD,CAAC;aACL;YACD,SAAS,EAAE;gBACP,+DAAW;aACd;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9CtB,mCAAmC,uBAAuB,KAAK,K;;;;;;;;;;;ACA/D,uGAAuG,gBAAgB,2KAA2K,kBAAkB,4FAA4F,qBAAqB,GAAG,iBAAiB,MAAM,mBAAmB,IAAI,kBAAkB,qBAAqB,cAAc,qBAAqB,yCAAyC,qBAAqB,wDAAwD,+OAA+O,iDAAiD,yPAAyP,iDAAiD,0N;;;;;;;;;;;;;;;;;;;;;;;;;;ACArrC;AACS;AACX;AAOzC;IAEE,kBAAmB,IAAiB,EAAS,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAG3D,iBAAY,GAAW,EAAE,CAAC;IAF1B,CAAC;IAIC,6BAAU,GAAV;QAAA,iBAOD;QANC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;aACjB,SAAS,CAAC,iBAAO;YAChB,IAAI,OAAO,EAAE;gBACX,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,YAAY,GAAG,sBAAsB,EAA1C,CAA0C,CAAC,CAAC;IAC1D,CAAC;IAdU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGyB,+DAAW,EAAiB,sDAAM;OAFhD,QAAQ,CAepB;IAAD,eAAC;CAAA;AAfoB;;;;;;;;;;;;ACTrB,gJAAgJ,gBAAgB,6lC;;;;;;;;;;;;;;;;;;;;;;;;;;ACArH;AACS;AACX;AAMzC;IAEI,eAAmB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEpD,iBAAY,GAAW,EAAE,CAAC;QAE3B,UAAK,GAAG;YACX,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf,CAAC;IAP8D,CAAC;IASjE,uBAAO,GAAP;QAAA,iBAYC;QAXG,wBAAwB;QACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aACtB,SAAS,CAAC,iBAAO;YACd,IAAI,OAAO,EAAE;gBACT,IAAI,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;oBACnC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC/B;qBAAM;oBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;iBACtC;aACJ;QACL,CAAC,EAAE,aAAG,IAAI,YAAI,CAAC,YAAY,GAAG,iBAAiB,EAArC,CAAqC,CAAC,CAAC;IACzD,CAAC;IAvBQ,KAAK;QAJjB,+DAAS,CAAC;YACP,QAAQ,EAAE,OAAO;;SAEpB,CAAC;yCAG2B,+DAAW,EAAkB,sDAAM;OAFnD,KAAK,CAwBjB;IAAD,YAAC;CAAA;AAxBiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR8C;AACrB;AACN;AAGrC,6CAA6C;AAC7C,eAAe;AACmB;AAClC,qDAAqD;AAGrD;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE7B,UAAK,GAAW,EAAE,CAAC;QAGnB,UAAK,GAAiB,IAAI,4CAAY,EAAE,CAAC;QAEzC,aAAQ,GAAc,EAAE,CAAC;IAPQ,CAAC;IASlC,kCAAY,GAAnB;QAAA,iBAQC;QANG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;aAChC,IAAI,CACL,0DAAG,CAAC,UAAC,IAAW;YACZ,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,sBAAW,sCAAa;aAAxB;YAEI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;QACvE,CAAC;;;OAAA;IAEM,2BAAK,GAAZ,UAAa,KAAK;QAAlB,iBAeC;QAbI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC;aACpD,IAAI,CACL,0DAAG,CAAC,UAAC,QAAa;YACzB;;6EAEiE;YAE9C,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC7B,iDAAiD;YACxD,KAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAE7C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,8BAAQ,GAAf;QAAA,iBAaC;QAZG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtH;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE;YAC7C,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SACxE,CAAC;aACC,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,4CAAY,EAAE,CAAC;YAChC,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAEM,gCAAU,GAAjB,UAAkB,OAAgB;QAE9B,IAAI,IAAI,GAAqB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,IAAI,OAAO,CAAC,EAAE,EAAzB,CAAyB,CAAC,CAAC;QAEnF,IAAI,IAAI,IAAI,IAAI,EAAE;YAEd,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;aACI;YAED,IAAI,GAAG,IAAI,gDAAgB,EAAE,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAElB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;IAEJ,CAAC;IAjFQ,WAAW;QADvB,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,WAAW,CAmFvB;IAAD,kBAAC;CAAA;AAnFuB;;;;;;;;;;;;;ACXvB;AAAA;AAAA;AAAA;AAAA;AAA4B;AAE7B;IAAA;QAEI,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAE7B,UAAK,GAAqB,IAAI,KAAK,EAAa,CAAC;IAMrD,CAAC;IAJG,sBAAI,2BAAQ;aAAZ;YACI,OAAO,0CAAK,CAAC,0CAAK,CAAC,IAAI,CAAC,KAAK,EAAE,WAAC,IAAI,QAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,EAA1B,CAA0B,CAAC,CAAC,CAAC;QACrE,CAAC;;;OAAA;IAAA,CAAC;IAEN,YAAC;AAAD,CAAC;;AAED;IAAA;IAUA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;ACxBD,2GAA2G,2BAA2B,4CAA4C,qDAAqD,iVAAiV,qBAAqB,KAAK,kBAAkB,2BAA2B,cAAc,2BAA2B,6CAA6C,2BAA2B,4DAA4D,yK;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjwB;AACS;AACX;AAOzC;IAEI,cAAmB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEjE,yBAAU,GAAV;QACI,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACzB,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC;aAAM;YACH,gBAAgB;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;IAZQ,IAAI;QALhB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE,EAAE;SAChB,CAAC;yCAG2B,+DAAW,EAAkB,sDAAM;OAFnD,IAAI,CAahB;IAAD,WAAC;CAAA;AAbgB;;;;;;;;;;;;ACTjB,yCAAyC,6BAA6B,oBAAoB,sBAAsB,gCAAgC,KAAK,oCAAoC,wBAAwB,yBAAyB,KAAK,K;;;;;;;;;;;ACA/O,sKAAsK,WAAW,6FAA6F,cAAc,KAAK,UAAU,qDAAqD,yCAAyC,sDAAsD,YAAY,qDAAqD,WAAW,mFAAmF,oBAAoB,+L;;;;;;;;;;;;;;;;;;;;;;;;;ACA/jB;AACC;AAQpD;IAGI,qBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAGD,8BAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;aACnB,SAAS,CAAC,iBAAO;YACd,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aACtC;QAEL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,gCAAU,GAAV,UAAW,OAAgB;QAEvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAElC,CAAC;IArBQ,WAAW;QALvB,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAI4B,+DAAW;OAH5B,WAAW,CAuBvB;IAAD,kBAAC;CAAA;AAvBuB;;;;;;;;;;;;ACTxB,uFAAuF,SAAS,8J;;;;;;;;;;;;;;;;;;;;;ACArD;AAM3C;IAAA;IAEA,CAAC;IAFY,IAAI;QAJhB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;SAEvB,CAAC;OACW,IAAI,CAEhB;IAAD,WAAC;CAAA;AAFgB;;;;;;;;;;;;;ACNjB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from \"./shop/productList.component\";\r\nimport { Cart } from \"./shop/cart.component\";\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./checkout/checkout.component\";\r\nimport { Login } from \"./login/login.component\";\r\n\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n\r\nlet routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    { path: \"login\", component: Login }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ProductList,\r\n        Cart,\r\n        Shop,\r\n        Checkout,\r\n        Login\r\n    ],\r\n    imports: [\r\n       BrowserModule,\r\n       HttpClientModule,\r\n       FormsModule,\r\n        RouterModule.forRoot(routes, {\r\n            useHash: true,\r\n            enableTracing: false //For Debugging of the Routes\r\n        })\r\n    ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","module.exports = \".checkout-thumb {\\r\\n  max-width: 100px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n  <h3>Confirm Order</h3>\\r\\n  <table class=\\\"table table-bordered table-hover\\\">\\r\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n      <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\r\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\r\\n      <td>{{ o.quantity }}</td>\\r\\n      <td>{{ o.unitPrice|currency:'AUD':\\\"symbol\\\" }}</td>\\r\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'AUD':\\\"symbol\\\" }}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\r\\n    <table class=\\\"table table-condensed\\\">\\r\\n      <tr>\\r\\n        <td class=\\\"text-right\\\">Subtotal</td>\\r\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'AUD':\\\"symbol\\\" }}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td class=\\\"text-right\\\">Shipping</td>\\r\\n        <td class=\\\"text-right\\\">A$ 0.00</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td class=\\\"text-right\\\">Total:</td>\\r\\n        <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'AUD':\\\"symbol\\\" }}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\r\\n     <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\r\\n  </div>\\r\\n\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"checkout\",\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: ['checkout.component.css']\r\n})\r\nexport class Checkout {\r\n\r\n  constructor(public data: DataService, public router: Router) {\r\n  }\r\n  \r\n  errorMessage: string = \"\";\r\n\r\n    onCheckout() {\r\n    this.data.checkout()\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      }, err => this.errorMessage = \"Failed to save order\");\r\n  }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4 offset-4\\\">\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n    <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Username</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\" >Username is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\" required />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\nexport class Login {\r\n\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    private errorMessage: string = \"\";\r\n\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        //Call the login Service\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate([\"/\"]);\r\n                    } else {\r\n                        this.router.navigate([\"checkout\"]);\r\n                    }\r\n                }\r\n            }, err => this.errorMessage = \"Failed to login\");\r\n    }\r\n}","﻿import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from \"./product\";\r\n//import { Order, OrderItem } from \"./order\";\r\n//or like this:\r\nimport * as orders from \"./order\";\r\n//import { Response } from \"selenium-webdriver/http\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public token: string = \"\";\r\n    public tokenExpiration: Date;\r\n\r\n    public order: orders.Order = new orders.Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    public loadProducts(): Observable<boolean> {\r\n\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n            map((data: any[]) => {\r\n                this.products = data;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n\r\n        return this.token.length == 0 || this.tokenExpiration < new Date();\r\n    }\r\n\r\n    public login(creds) {\r\n\r\n         return this.http.post(\"/account/createtoken\", creds)\r\n        .pipe(\r\n        map((response: any) => {\r\n /*               let tokenInfo = response;\r\n                    this.token = tokenInfo.token;\r\n                    this.tokenExpiration = tokenInfo.expiration;*/\r\n\r\n                    this.token = response.token;\r\n                   // this.tokenExpiration = response.token.validTo;\r\n            this.tokenExpiration = new Date(response.expiration);\r\n\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n        })\r\n          .pipe(\r\n            map((response: any) => {\r\n                this.order = new orders.Order();\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public AddToOrder(product: Product) {\r\n\r\n        let item: orders.OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item != null) {\r\n\r\n            item.quantity++;\r\n        }\r\n        else {\r\n\r\n            item = new orders.OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productArtId = product.artId;\r\n            item.productTitle = product.title;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n       }\r\n\r\n    }\r\n\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => (i.unitPrice * i.quantity)));\r\n    };\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}\r\n","module.exports = \"<h3 class=\\\"text-center\\\">Shopping Cart</h3>\\r\\n<div><strong>Number of items</strong>: {{ data.order.items.length }}</div>\\r\\n<div><strong>Subtotal</strong>: {{ data.order.subtotal | currency:\\\"AUD\\\":\\\"symbol\\\" }}</div>\\r\\n<table class=\\\"table lh-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Product</td>\\r\\n            <td>Quantity</td>\\r\\n            <td>Price</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice | currency:\\\"AUD\\\":\\\"symbol\\\" }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"AUD\\\":\\\"symbol\\\" }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            //Go to checkout\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n}","module.exports = \"\\r\\n.product-info img {\\r\\n\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name{\\r\\n    font-size:large;\\r\\n    font-weight:bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"product-info col-md-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <div>\\r\\n            <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n            <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\r\\n            <div><strong>Price</strong>: {{ p.price | currency:\\\"AUD\\\":\\\"symbol\\\" }}</div>\\r\\n            <div><strong>Artist</strong>: {{ p.artist }}</div>\\r\\n            <div><strong>Title</strong>: {{ p.title }}</div>\\r\\n            <div  class=\\\"text-justify\\\"><strong>Description</strong>: {{ p.artDescription }}</div>\\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn btn-outline-success btn-sm fa-pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n    public products: Product[];\r\n\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n\r\n        this.data.AddToOrder(product);\r\n\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <the-cart></the-cart>\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}